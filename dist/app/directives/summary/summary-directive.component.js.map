{"version":3,"sources":["app/directives/summary/summary-directive.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAkC,eAAe,CAAC,CAAA;AAClD,uBAAuB,iBAAiB,CAAC,CAAA;AAazC;IAQE,0BAAoB,OAAe;QAAf,YAAO,GAAP,OAAO,CAAQ;QACjC,IAAI,CAAC,UAAU,GAAG,kBAAkB,CAAC;IACvC,CAAC;IAEM,mCAAQ,GAAf;QAEE,IAAI,CAAC,WAAW,GAAG;YACjB,KAAK,EAAE;gBACL,IAAI,EAAE,WAAW;gBACjB,MAAM,EAAE,GAAG;gBACX,KAAK,EAAE,GAAG;gBACV,MAAM,EAAE;oBACN,GAAG,EAAE,EAAE;oBACP,KAAK,EAAE,EAAE;oBACT,MAAM,EAAE,EAAE;oBACV,IAAI,EAAE,EAAE;iBACT;gBACD,CAAC,EAAE,UAAU,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC/B,CAAC,EAAE,UAAU,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC/B,uBAAuB,EAAE,IAAI;gBAC7B,KAAK,EAAE;oBACL,SAAS,EAAE,YAAY;iBACxB;gBACD,KAAK,EAAE;oBACL,SAAS,EAAE,YAAY;oBACvB,UAAU,EAAE,UAAU,CAAC;wBACrB,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC9B,CAAC;oBACD,iBAAiB,EAAE,CAAC,EAAE;iBACvB;aACF;SACF,CAAC;QAEF,IAAI,CAAC,iBAAiB,GAAG;YACvB,KAAK,EAAE;gBACL,IAAI,EAAE,UAAU;gBAChB,MAAM,EAAE,GAAG;gBACX,KAAK,EAAE,GAAG;gBACV,KAAK,EAAE,IAAI;gBACX,CAAC,EAAE,UAAU,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACjC,CAAC,EAAE,UAAU,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC/B,UAAU,EAAE,IAAI;gBAChB,GAAG,EAAE;oBACH,UAAU,EAAE,UAAU,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAA,CAAC,CAAC;oBAC1D,QAAQ,EAAE,UAAU,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAA,CAAC,CAAC;iBACvD;gBACD,QAAQ,EAAE,GAAG;gBACb,MAAM,EAAE;oBACN,MAAM,EAAE;wBACN,GAAG,EAAE,CAAC;wBACN,KAAK,EAAE,EAAE;wBACT,MAAM,EAAE,CAAC;wBACT,IAAI,EAAE,EAAE;qBACT;iBACF;aACF;SACF,CAAC;QAEF,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC7B,CAAC;IAEM,yCAAc,GAArB;QACE,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;IAC9C,CAAC;IAEM,oCAAS,GAAhB;QACE,IAAI,GAAG,GAAG,EAAE,EAAE,IAAI,GAAG,EAAE,EACrB,GAAG,GAAG,EAAE,CAAC;QAGX,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;YAC7B,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;YAChC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC;YACnE,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;QAChE,CAAC;QAGD,MAAM,CAAC;YACL;gBACE,MAAM,EAAE,GAAG;gBACX,GAAG,EAAE,SAAS;gBACd,KAAK,EAAE,SAAS;aACjB;YACD;gBACE,MAAM,EAAE,GAAG;gBACX,GAAG,EAAE,QAAQ;gBACb,KAAK,EAAE,SAAS;aACjB;YACD;gBACE,MAAM,EAAE,IAAI;gBACZ,GAAG,EAAE,SAAS;gBACd,KAAK,EAAE,SAAS;gBAChB,IAAI,EAAE,IAAI;aACX;SACF,CAAC;IACJ,CAAC;IAEM,8CAAmB,GAA1B;QAEE,IAAI,CAAC,uBAAuB,GAAG;YAC7B;gBACE,GAAG,EAAE,SAAS;gBACd,CAAC,EAAE,EAAE;aACN;YACD;gBACE,GAAG,EAAE,QAAQ;gBACb,CAAC,EAAE,EAAE;aACN;YACD;gBACE,GAAG,EAAE,SAAS;gBACd,CAAC,EAAE,EAAE;aACN;YACD;gBACE,GAAG,EAAE,WAAW;gBAChB,CAAC,EAAE,EAAE;aACN;SACF,CAAC;IACJ,CAAC;IArIH;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,WAAW,EAAE,yDAAyD;YACtE,SAAS,EAAE,CAAC,wDAAwD,CAAC;YACrE,SAAS,EAAE,EAAE;SACd,CAAC;;wBAAA;IAiIF,uBAAC;AAAD,CA/HA,AA+HC,IAAA;AA/HY,wBAAgB,mBA+H5B,CAAA","file":"summary-directive.component.js","sourcesContent":["import { Component, OnInit } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\n\r\nimport { DatePickerComponent } from \"app/directives/datepicker/datepicker-directive.component\";\r\n\r\ndeclare let d3: any;\r\n\r\n@Component({\r\n  selector: \"summary-chart\",\r\n  templateUrl: \"app/directives/summary/summary-directive.component.html\",\r\n  styleUrls: [\"app/directives/summary/summary-directive.component.css\"],\r\n  providers: []\r\n})\r\n\r\nexport class SummaryComponent implements OnInit {\r\n  public lineOptions;\r\n  public donutChartOptions;\r\n  public jobStatusWeeklyData;\r\n  public jobStatusPercentageData;\r\n\r\n  private _className: string;\r\n\r\n  constructor(private _router: Router) {\r\n    this._className = \"SummaryComponent\";\r\n  }\r\n\r\n  public ngOnInit() {\r\n\r\n    this.lineOptions = {\r\n      chart: {\r\n        type: 'lineChart',\r\n        height: 250,\r\n        width: 600,\r\n        margin: {\r\n          top: 20,\r\n          right: 20,\r\n          bottom: 40,\r\n          left: 55\r\n        },\r\n        x: function (d) { return d.x; },\r\n        y: function (d) { return d.y; },\r\n        useInteractiveGuideline: true,\r\n        xAxis: {\r\n          axisLabel: 'No of days'\r\n        },\r\n        yAxis: {\r\n          axisLabel: 'No of Jobs',\r\n          tickFormat: function (d) {\r\n            return d3.format('.02f')(d);\r\n          },\r\n          axisLabelDistance: -10\r\n        }\r\n      }\r\n    };\r\n\r\n    this.donutChartOptions = {\r\n      chart: {\r\n        type: \"pieChart\",\r\n        height: 400,\r\n        width: 400,\r\n        donut: true,\r\n        x: function (d) { return d.key; },\r\n        y: function (d) { return d.y; },\r\n        showLabels: true,\r\n        pie: {\r\n          startAngle: function (d) { return d.startAngle - Math.PI },\r\n          endAngle: function (d) { return d.endAngle - Math.PI }\r\n        },\r\n        duration: 500,\r\n        legend: {\r\n          margin: {\r\n            top: 5,\r\n            right: 35,\r\n            bottom: 5,\r\n            left: 40\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    this.loadlineCharts();\r\n    this.loadPercentageChart();\r\n  }\r\n\r\n  public loadlineCharts() {\r\n    this.jobStatusWeeklyData = this.sinAndCos();\r\n  }\r\n\r\n  public sinAndCos() {\r\n    var sin = [], sin2 = [],\r\n      cos = [];\r\n\r\n    //Data is represented as an array of {x,y} pairs.\r\n    for (var i = 0; i < 100; i++) {\r\n      sin.push({ x: i, y: (i / 10) });\r\n      sin2.push({ x: i, y: i % 10 == 5 ? null : (i / 10) * 0.25 + 0.5 });\r\n      cos.push({ x: i, y: .5 * (i / 10 + 2) + Math.random() / 10 });\r\n    }\r\n\r\n    //Line chart data should be sent as an array of series objects.\r\n    return [\r\n      {\r\n        values: sin,      //values - represents the array of {x,y} data points\r\n        key: 'Success', //key  - the name of the series.\r\n        color: '#2ca02c'  //color - optional: choose your own line color.\r\n      },\r\n      {\r\n        values: cos,\r\n        key: 'Failed',\r\n        color: '#ff7f0e'\r\n      },\r\n      {\r\n        values: sin2,\r\n        key: 'On-hold',\r\n        color: '#7777ff',\r\n        area: true      //area - set to true if you want this line to turn into a filled area chart.\r\n      }\r\n    ];\r\n  }\r\n\r\n  public loadPercentageChart() {\r\n\r\n    this.jobStatusPercentageData = [\r\n      {\r\n        key: \"Success\",\r\n        y: 38\r\n      },\r\n      {\r\n        key: \"Failed\",\r\n        y: 10\r\n      },\r\n      {\r\n        key: \"On-hold\",\r\n        y: 19\r\n      },\r\n      {\r\n        key: \"In-active\",\r\n        y: 43\r\n      }\r\n    ];\r\n  }\r\n}\r\n"]}